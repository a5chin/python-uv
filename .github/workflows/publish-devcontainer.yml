name: Publish Devcontainer to GHCR

on:
  push:
    branches: [main]
    paths:
      - ".devcontainer/Dockerfile"
      - ".github/workflows/publish-devcontainer.yml"
      - ".python-version"

  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}/devcontainer
  REGISTRY: ghcr.io

jobs:
  publish-devcontainer:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            maintainer=a5chin <a5chin.origin+contact@gmain.com>
            org.opencontainers.image.url=https://github.com/a5chin/python-uv
            org.opencontainers.image.source=https://github.com/a5chin/python-uv
            org.opencontainers.image.vendor=a5chin <a5chin.origin+contact@gmain.com>
            org.opencontainers.image.title=python-uv
            org.opencontainers.image.description=Dev Container for Python development with uv-based dependency management and environment configuration.
            org.opencontainers.image.documentation=https://a5chin.github.io/python-uv/
            org.opencontainers.image.authors=a5chin <a5chin.origin+contact@gmain.com>
            org.opencontainers.image.licenses=MIT

      - name: Build and push devcontainer image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .devcontainer/Dockerfile
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
